<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>

  <head>
    <meta charset="utf-8">
      <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
      <title>Class BaseVisualEffect
 | HelloHolo UI Toolkit Documentation </title>
      <meta name="viewport" content="width=device-width">
      <meta name="title" content="Class BaseVisualEffect
 | HelloHolo UI Toolkit Documentation ">
    
      <link rel="shortcut icon" href="../favicon.ico">
      <link rel="stylesheet" href="../styles/docfx.vendor.css">
      <link rel="stylesheet" href="../styles/docfx.css">
      <link rel="stylesheet" href="../styles/main.css">
      <meta property="docfx:navrel" content="../toc.html">
      <meta property="docfx:tocrel" content="toc.html">
    
    <meta property="docfx:rel" content="../">
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>

        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>

              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>

        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div class="container body-content">

        <div id="search-results">
          <div class="search-list">Search Results for <span></span></div>
          <div class="sr-items">
            <p><i class="glyphicon glyphicon-refresh index-loading"></i></p>
          </div>
          <ul id="pagination" data-first="First" data-prev="Previous" data-next="Next" data-last="Last"></ul>
        </div>
      </div>
      <div role="main" class="container body-content hide-when-search">

        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect">


  <h1 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect" class="text-break">Class BaseVisualEffect
</h1>
  <div class="markdown level0 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Base abstract class for a scriptable object visual effect for interactables. Extend this class to provide additional functionalities to the visual effect.</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">object</span></div>
    <div class="level1"><span class="xref">BaseVisualEffect</span></div>
      <div class="level2"><a class="xref" href="HHUIToolkit.Core.VisualEffect.ActivateVisualEffect.html">ActivateVisualEffect</a></div>
      <div class="level2"><a class="xref" href="HHUIToolkit.Core.VisualEffect.AnimationTriggerVisualEffect.html">AnimationTriggerVisualEffect</a></div>
      <div class="level2"><a class="xref" href="HHUIToolkit.Core.VisualEffect.BaseAnimatedVisualEffect.html">BaseAnimatedVisualEffect</a></div>
  </div>
  <h6><strong>Namespace</strong>: <span class="xref">HHUIToolkit</span>.<a class="xref" href="HHUIToolkit.Core.html">Core</a>.<a class="xref" href="HHUIToolkit.Core.VisualEffect.html">VisualEffect</a></h6>
  <h6><strong>Assembly</strong>: cs.temp.dll.dll</h6>
  <h5 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public abstract class BaseVisualEffect : ScriptableObject</code></pre>
  </div>
  <h3 id="fields">Fields
</h3>


  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_statePriorities" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.statePriorities">statePriorities</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected List&lt;StatePriorityItem&gt; statePriorities</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">List&lt;&gt;</span>&lt;<a class="xref" href="HHUIToolkit.Core.VisualEffect.StatePriorityItem.html">StatePriorityItem</a>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_TOOLTIP_STATE_ACTIVATED" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.TOOLTIP_STATE_ACTIVATED">TOOLTIP_STATE_ACTIVATED</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public const string TOOLTIP_STATE_ACTIVATED = &quot;Activation is an extra action, typically mapped to a button or trigger that affects the currently selected object. This lets the user further interact with an object they&#39;ve selected.&quot;</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_TOOLTIP_STATE_FOCUS" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.TOOLTIP_STATE_FOCUS">TOOLTIP_STATE_FOCUS</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public const string TOOLTIP_STATE_FOCUS = &quot;An Interactable is focused when it is selected. This focus persists until another Interactable is selected or the Interactable explicitly attempts to select nothing.&quot;</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_TOOLTIP_STATE_HOVER" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.TOOLTIP_STATE_HOVER">TOOLTIP_STATE_HOVER</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public const string TOOLTIP_STATE_HOVER = &quot;The state when there is an interactor hovering over this interactable. Similar to a mouse-over state.&quot;</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_TOOLTIP_STATE_IDLE" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.TOOLTIP_STATE_IDLE">TOOLTIP_STATE_IDLE</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public const string TOOLTIP_STATE_IDLE = &quot;The default state when none of the other states are active.&quot;</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_TOOLTIP_STATE_PRIORITIES" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.TOOLTIP_STATE_PRIORITIES">TOOLTIP_STATE_PRIORITIES</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public const string TOOLTIP_STATE_PRIORITIES = &quot;Adjust or enable/disable effect interactions with the interactable states.\n\nPriorities for each interactable state is rank top to bottom, from highest to lowest priority, repectively.\n\nEffects from a higher priority state will overwrite the effects from a lower priority state when both are active at the same time. A disabled effect state will not trigger any effects.&quot;</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_TOOLTIP_STATE_SELECT" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.TOOLTIP_STATE_SELECT">TOOLTIP_STATE_SELECT</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public const string TOOLTIP_STATE_SELECT = &quot;The state when an interactor is selecting/clicking on this interactable. Similar to a mouse-down state.&quot;</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="properties">Properties
</h3>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_CurrentActiveState_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.CurrentActiveState*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_CurrentActiveState" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.CurrentActiveState">CurrentActiveState</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">The currently highest priority state.
The currently active state can only be a single state, while currentStates represent the status of all
the states on this interactable.
Defaults to <a class="xref" href="HHUIToolkit.Core.VisualEffect.InteractableStates.html#HHUIToolkit_Core_VisualEffect_InteractableStates_Idle">Idle</a> if no state priorities are enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public InteractableStates CurrentActiveState { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="HHUIToolkit.Core.VisualEffect.InteractableStates.html">InteractableStates</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_CurrentStates_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.CurrentStates*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_CurrentStates" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.CurrentStates">CurrentStates</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">The currently active states of this <a class="xref" href="HHUIToolkit.Core.HHBaseInteractable.html">interactable</a>.
Whenever this value is changed, it will check if the active state has changed and invoke the event
callback if it has.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected InteractableStates CurrentStates { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="HHUIToolkit.Core.VisualEffect.InteractableStates.html">InteractableStates</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_Interactable_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.Interactable*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_Interactable" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.Interactable">Interactable</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">The <a class="xref" href="HHUIToolkit.Core.HHBaseInteractable.html">interactable</a> instance that this effect is attached to.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public HHBaseInteractable Interactable { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="HHUIToolkit.Core.HHBaseInteractable.html">HHBaseInteractable</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_PreviousActiveState_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.PreviousActiveState*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_PreviousActiveState" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.PreviousActiveState">PreviousActiveState</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">The previously highest priority state.
The previously active state can only be a single state, while currentStates represent the status of all
the states on this interactable.
Defaults to <a class="xref" href="HHUIToolkit.Core.VisualEffect.InteractableStates.html#HHUIToolkit_Core_VisualEffect_InteractableStates_Idle">Idle</a> if no state priorities are enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public InteractableStates PreviousActiveState { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="HHUIToolkit.Core.VisualEffect.InteractableStates.html">InteractableStates</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_Target_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.Target*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_Target" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.Target">Target</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">The <see cref="!:GameObject"></see> that this effect will apply on.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public GameObject Target { get; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">GameObject</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
</h3>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_Activated_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.Activated*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_Activated_ActivateEventArgs_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.Activated(ActivateEventArgs)">Activated(ActivateEventArgs)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Base event method called by the interactable.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected void Activated(ActivateEventArgs e)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">ActivateEventArgs</span></td>
        <td><span class="parametername">e</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Contains information about the interaction event.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_CheckInitialization_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.CheckInitialization*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_CheckInitialization" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.CheckInitialization">CheckInitialization()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Checks whether the effect has been properly initialized and ready to be used.
<br><br>
Extend this method to add additional checks and verifications if needed.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected virtual bool CheckInitialization()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">bool</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Whether this effect passed the initialization checks.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_Deactivated_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.Deactivated*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_Deactivated_DeactivateEventArgs_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.Deactivated(DeactivateEventArgs)">Deactivated(DeactivateEventArgs)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Base event method called by the interactable.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected void Deactivated(DeactivateEventArgs e)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">DeactivateEventArgs</span></td>
        <td><span class="parametername">e</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Contains information about the interaction event.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_FirstFocusEntered_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.FirstFocusEntered*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_FirstFocusEntered_FocusEnterEventArgs_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.FirstFocusEntered(FocusEnterEventArgs)">FirstFocusEntered(FocusEnterEventArgs)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Base event method called by the interactable.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected void FirstFocusEntered(FocusEnterEventArgs e)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">FocusEnterEventArgs</span></td>
        <td><span class="parametername">e</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Contains information about the interaction event.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_FirstHoverEntered_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.FirstHoverEntered*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_FirstHoverEntered_HoverEnterEventArgs_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.FirstHoverEntered(HoverEnterEventArgs)">FirstHoverEntered(HoverEnterEventArgs)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Base event method called by the interactable.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected void FirstHoverEntered(HoverEnterEventArgs e)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">HoverEnterEventArgs</span></td>
        <td><span class="parametername">e</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Contains information about the interaction event.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_FirstSelectEntered_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.FirstSelectEntered*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_FirstSelectEntered_SelectEnterEventArgs_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.FirstSelectEntered(SelectEnterEventArgs)">FirstSelectEntered(SelectEnterEventArgs)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Base event method called by the interactable.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected void FirstSelectEntered(SelectEnterEventArgs e)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">SelectEnterEventArgs</span></td>
        <td><span class="parametername">e</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Contains information about the interaction event.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_FocusEntered_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.FocusEntered*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_FocusEntered_FocusEnterEventArgs_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.FocusEntered(FocusEnterEventArgs)">FocusEntered(FocusEnterEventArgs)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Base event method called by the interactable.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected void FocusEntered(FocusEnterEventArgs e)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">FocusEnterEventArgs</span></td>
        <td><span class="parametername">e</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Contains information about the interaction event.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_FocusExited_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.FocusExited*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_FocusExited_FocusExitEventArgs_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.FocusExited(FocusExitEventArgs)">FocusExited(FocusExitEventArgs)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Base event method called by the interactable.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected void FocusExited(FocusExitEventArgs e)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">FocusExitEventArgs</span></td>
        <td><span class="parametername">e</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Contains information about the interaction event.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_FormatDebugMessage_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.FormatDebugMessage*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_FormatDebugMessage_System_String_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.FormatDebugMessage(System.String)">FormatDebugMessage(string)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Helper tool for formatting debug messages.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected string FormatDebugMessage(string message)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><span class="parametername">message</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Debug message to be formatted.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Formatted debug message.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_GetHighestPriorityActiveState_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.GetHighestPriorityActiveState*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_GetHighestPriorityActiveState_HHUIToolkit_Core_VisualEffect_InteractableStates_List_HHUIToolkit_Core_VisualEffect_StatePriorityItem__" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.GetHighestPriorityActiveState(HHUIToolkit.Core.VisualEffect.InteractableStates,List{HHUIToolkit.Core.VisualEffect.StatePriorityItem})">GetHighestPriorityActiveState(InteractableStates, List&lt;StatePriorityItem&gt;)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Get the highest priority and enabled state according to the statePriorities list, from the currently active states.
<br><br>
Defaults to <a class="xref" href="HHUIToolkit.Core.VisualEffect.InteractableStates.html#HHUIToolkit_Core_VisualEffect_InteractableStates_Idle">Idle</a> if no state priorities are enabled.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static InteractableStates GetHighestPriorityActiveState(InteractableStates states, List&lt;StatePriorityItem&gt; statePriorities)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="HHUIToolkit.Core.VisualEffect.InteractableStates.html">InteractableStates</a></td>
        <td><span class="parametername">states</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Currently active states.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">List&lt;&gt;</span>&lt;<a class="xref" href="HHUIToolkit.Core.VisualEffect.StatePriorityItem.html">StatePriorityItem</a>&gt;</td>
        <td><span class="parametername">statePriorities</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">State priority list.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="HHUIToolkit.Core.VisualEffect.InteractableStates.html">InteractableStates</a></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">The single highest priority active state among all active states.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_GetTooltip_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.GetTooltip*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_GetTooltip_System_String_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.GetTooltip(System.String)">GetTooltip(string)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Get the helper tooltip string about the different interactable states.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string GetTooltip(string state)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><span class="parametername">state</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Interactable state to retrieve tooltip information about.</p>
</td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Tooltip string about the input interactable state.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_HoverEntered_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.HoverEntered*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_HoverEntered_HoverEnterEventArgs_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.HoverEntered(HoverEnterEventArgs)">HoverEntered(HoverEnterEventArgs)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Base event method called by the interactable.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected void HoverEntered(HoverEnterEventArgs e)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">HoverEnterEventArgs</span></td>
        <td><span class="parametername">e</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Contains information about the interaction event.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_HoverExited_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.HoverExited*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_HoverExited_HoverExitEventArgs_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.HoverExited(HoverExitEventArgs)">HoverExited(HoverExitEventArgs)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Base event method called by the interactable.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected void HoverExited(HoverExitEventArgs e)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">HoverExitEventArgs</span></td>
        <td><span class="parametername">e</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Contains information about the interaction event.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_IdleEntered_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.IdleEntered*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_IdleEntered" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.IdleEntered">IdleEntered()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Base event method called whenever <a class="xref" href="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.html#HHUIToolkit_Core_VisualEffect_BaseVisualEffect_CurrentStates">CurrentStates</a> becomes <a class="xref" href="HHUIToolkit.Core.VisualEffect.InteractableStates.html#HHUIToolkit_Core_VisualEffect_InteractableStates_Idle">Idle</a>.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected void IdleEntered()</code></pre>
  </div>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_IdleExited_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.IdleExited*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_IdleExited" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.IdleExited">IdleExited()</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Base event method called whenever <a class="xref" href="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.html#HHUIToolkit_Core_VisualEffect_BaseVisualEffect_CurrentStates">CurrentStates</a> becomes anything other than <a class="xref" href="HHUIToolkit.Core.VisualEffect.InteractableStates.html#HHUIToolkit_Core_VisualEffect_InteractableStates_Idle">Idle</a>.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected void IdleExited()</code></pre>
  </div>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_Initialize_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.Initialize*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_Initialize_HHUIToolkit_Core_HHBaseInteractable_GameObject_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.Initialize(HHUIToolkit.Core.HHBaseInteractable,GameObject)">Initialize(HHBaseInteractable, GameObject)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Initialization method for this effect. This methods must be called at least once
before this effect is being used.
<a class="xref" href="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.html#HHUIToolkit_Core_VisualEffect_BaseVisualEffect_CheckInitialization">CheckInitialization()</a> will verify
whether this effect is initialized on every event call, stopping the effect
from executing if not initialized.
<br><br>
Extend this method to add additional intialization functionality.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public virtual void Initialize(HHBaseInteractable interactable, GameObject target)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="HHUIToolkit.Core.HHBaseInteractable.html">HHBaseInteractable</a></td>
        <td><span class="parametername">interactable</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">The <a class="xref" href="HHUIToolkit.Core.HHBaseInteractable.html">interactable</a> instance that this effect is attached to.</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">GameObject</span></td>
        <td><span class="parametername">target</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">The <see cref="!:GameObject"></see> that this effect will apply on.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_LastFocusExited_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.LastFocusExited*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_LastFocusExited_FocusExitEventArgs_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.LastFocusExited(FocusExitEventArgs)">LastFocusExited(FocusExitEventArgs)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Base event method called by the interactable.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected void LastFocusExited(FocusExitEventArgs e)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">FocusExitEventArgs</span></td>
        <td><span class="parametername">e</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Contains information about the interaction event.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_LastHoverExited_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.LastHoverExited*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_LastHoverExited_HoverExitEventArgs_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.LastHoverExited(HoverExitEventArgs)">LastHoverExited(HoverExitEventArgs)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Base event method called by the interactable.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected void LastHoverExited(HoverExitEventArgs e)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">HoverExitEventArgs</span></td>
        <td><span class="parametername">e</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Contains information about the interaction event.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_LastSelectExited_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.LastSelectExited*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_LastSelectExited_SelectExitEventArgs_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.LastSelectExited(SelectExitEventArgs)">LastSelectExited(SelectExitEventArgs)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Base event method called by the interactable.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected void LastSelectExited(SelectExitEventArgs e)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">SelectExitEventArgs</span></td>
        <td><span class="parametername">e</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Contains information about the interaction event.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_OnChangeState_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.OnChangeState*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_OnChangeState_GameObject_HHUIToolkit_Core_HHBaseInteractable_HHUIToolkit_Core_VisualEffect_InteractableStates_HHUIToolkit_Core_VisualEffect_InteractableStates_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.OnChangeState(GameObject,HHUIToolkit.Core.HHBaseInteractable,HHUIToolkit.Core.VisualEffect.InteractableStates,HHUIToolkit.Core.VisualEffect.InteractableStates)">OnChangeState(GameObject, HHBaseInteractable, InteractableStates, InteractableStates)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Called when the interactable enters a new active state.
Active state is the highest priority, enabled state that is currently active on the interactable.
<br><br>
This method call guarantees <a class="xref" href="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.html#HHUIToolkit_Core_VisualEffect_BaseVisualEffect_CheckInitialization">CheckInitialization()</a> to be true before executing.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected virtual void OnChangeState(GameObject target, HHBaseInteractable interactable, InteractableStates prevState, InteractableStates currentState)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">GameObject</span></td>
        <td><span class="parametername">target</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="HHUIToolkit.Core.HHBaseInteractable.html">HHBaseInteractable</a></td>
        <td><span class="parametername">interactable</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="HHUIToolkit.Core.VisualEffect.InteractableStates.html">InteractableStates</a></td>
        <td><span class="parametername">prevState</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Previous active state. Only has a single state value.</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="HHUIToolkit.Core.VisualEffect.InteractableStates.html">InteractableStates</a></td>
        <td><span class="parametername">currentState</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Current active state. Only has a single state value.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_PrintInitWarning_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.PrintInitWarning*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_PrintInitWarning_System_String_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.PrintInitWarning(System.String)">PrintInitWarning(string)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Wrapper for logging messages in the initialization step.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected void PrintInitWarning(string message)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">string</span></td>
        <td><span class="parametername">message</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Debug message.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_SelectEntered_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.SelectEntered*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_SelectEntered_SelectEnterEventArgs_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.SelectEntered(SelectEnterEventArgs)">SelectEntered(SelectEnterEventArgs)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Base event method called by the interactable.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected void SelectEntered(SelectEnterEventArgs e)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">SelectEnterEventArgs</span></td>
        <td><span class="parametername">e</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Contains information about the interaction event.</p>
</td>
      </tr>
    </tbody>
  </table>


  <a id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_SelectExited_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.SelectExited*"></a>
  <h4 id="HHUIToolkit_Core_VisualEffect_BaseVisualEffect_SelectExited_SelectExitEventArgs_" data-uid="HHUIToolkit.Core.VisualEffect.BaseVisualEffect.SelectExited(SelectExitEventArgs)">SelectExited(SelectExitEventArgs)</h4>
  <div class="markdown level1 summary"><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="2">Base event method called by the interactable.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="declaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">protected void SelectExited(SelectExitEventArgs e)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">SelectExitEventArgs</span></td>
        <td><span class="parametername">e</span></td>
        <td><p sourcefile="api/HHUIToolkit.Core.VisualEffect.BaseVisualEffect.yml" sourcestartlinenumber="1">Contains information about the interaction event.</p>
</td>
      </tr>
    </tbody>
  </table>
</article>
          </div>

          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>

      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
      HelloHolo UI Toolkit Documentation
      
          </div>
        </div>
      </footer>
    </div>

    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
